// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"encoding/json"

	"github.com/ethereum-optimism/optimism/op-bindings/solc"
)

const DebankL2RegisterStorageLayoutJSON = "{\"storage\":[{\"astId\":1000,\"contract\":\"contracts/L2/DebankL2Register.sol:DebankL2Register\",\"label\":\"owner\",\"offset\":0,\"slot\":\"0\",\"type\":\"t_address\"},{\"astId\":1001,\"contract\":\"contracts/L2/DebankL2Register.sol:DebankL2Register\",\"label\":\"nonces\",\"offset\":0,\"slot\":\"1\",\"type\":\"t_mapping(t_address,t_uint256)\"},{\"astId\":1002,\"contract\":\"contracts/L2/DebankL2Register.sol:DebankL2Register\",\"label\":\"l1Tol2Accounts\",\"offset\":0,\"slot\":\"2\",\"type\":\"t_mapping(t_address,t_address)\"},{\"astId\":1003,\"contract\":\"contracts/L2/DebankL2Register.sol:DebankL2Register\",\"label\":\"l2Tol1Accounts\",\"offset\":0,\"slot\":\"3\",\"type\":\"t_mapping(t_address,t_address)\"}],\"types\":{\"t_address\":{\"encoding\":\"inplace\",\"label\":\"address\",\"numberOfBytes\":\"20\"},\"t_mapping(t_address,t_address)\":{\"encoding\":\"mapping\",\"label\":\"mapping(address =\u003e address)\",\"numberOfBytes\":\"32\",\"key\":\"t_address\",\"value\":\"t_address\"},\"t_mapping(t_address,t_uint256)\":{\"encoding\":\"mapping\",\"label\":\"mapping(address =\u003e uint256)\",\"numberOfBytes\":\"32\",\"key\":\"t_address\",\"value\":\"t_uint256\"},\"t_uint256\":{\"encoding\":\"inplace\",\"label\":\"uint256\",\"numberOfBytes\":\"32\"}}}"

var DebankL2RegisterStorageLayout = new(solc.StorageLayout)

var DebankL2RegisterDeployedBin = "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c806354fd4d501161005b57806354fd4d501461010a5780637ecebe001461011f5780638402e11c1461014d5780638da5cb5b1461018357600080fd5b806313af4035146100825780632f58dc34146100975780634420e486146100f7575b600080fd5b6100956100903660046107e3565b6101a3565b005b6100cd6100a53660046107e3565b60036020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100956101053660046107e3565b6103d9565b610112610603565b6040516100ee9190610850565b61013f61012d3660046107e3565b60016020526000908152604090205481565b6040519081526020016100ee565b6100cd61015b3660046107e3565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6000546100cd9073ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff163314610275576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604b60248201527f446562616e6b4c3252656769737465723a2066756e6374696f6e2063616e206f60448201527f6e6c792062652063616c6c656420627920746865206f776e6572206f6620746860648201527f697320636f6e7472616374000000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811661033e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f446562616e6b4c3252656769737465723a2063616e206f6e6c7920626520646960448201527f7361626c65642076696120656e61626c65417262697472617279436f6e74726160648201527f63744465706c6f796d656e740000000000000000000000000000000000000000608482015260a40161026c565b6000546040805173ffffffffffffffffffffffffffffffffffffffff928316815291831660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a1600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff818116600090815260036020526040902054161561048e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f446562616e6b4c3252656769737465723a2054686973206c32206163636f756e60448201527f7420697320616c726561647920726567697374657265642e0000000000000000606482015260840161026c565b3360009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1615610512573360009081526002602090815260408083205473ffffffffffffffffffffffffffffffffffffffff1683526003909152902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555b336000818152600260209081526040808320805473ffffffffffffffffffffffffffffffffffffffff87167fffffffffffffffffffffffff000000000000000000000000000000000000000091821681179092559084526003835281842080549091168517905592825260019081905291812080549091906105959084906108d0565b90915550503360008181526001602090815260409182902054825193845273ffffffffffffffffffffffffffffffffffffffff85169184019190915282820152517fcc0bec1447060c88cdc5a739cf29cfa26c453574dd3f5b9e4dcc317d6401cb1c9181900360600190a150565b606061062e7f00000000000000000000000000000000000000000000000000000000000000006106a6565b6106577f00000000000000000000000000000000000000000000000000000000000000006106a6565b6106807f00000000000000000000000000000000000000000000000000000000000000006106a6565b604051602001610692939291906108e8565b604051602081830303815290604052905090565b6060816000036106e957505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561071357806106fd8161095e565b915061070c9050600a836109c5565b91506106ed565b60008167ffffffffffffffff81111561072e5761072e6109d9565b6040519080825280601f01601f191660200182016040528015610758576020820181803683370190505b5090505b84156107db5761076d600183610a08565b915061077a600a86610a1f565b6107859060306108d0565b60f81b81838151811061079a5761079a610a33565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506107d4600a866109c5565b945061075c565b949350505050565b6000602082840312156107f557600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461081957600080fd5b9392505050565b60005b8381101561083b578181015183820152602001610823565b8381111561084a576000848401525b50505050565b602081526000825180602084015261086f816040850160208701610820565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156108e3576108e36108a1565b500190565b600084516108fa818460208901610820565b80830190507f2e000000000000000000000000000000000000000000000000000000000000008082528551610936816001850160208a01610820565b60019201918201528351610951816002840160208801610820565b0160020195945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361098f5761098f6108a1565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826109d4576109d4610996565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082821015610a1a57610a1a6108a1565b500390565b600082610a2e57610a2e610996565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea164736f6c634300080f000a"

func init() {
	if err := json.Unmarshal([]byte(DebankL2RegisterStorageLayoutJSON), DebankL2RegisterStorageLayout); err != nil {
		panic(err)
	}

	layouts["DebankL2Register"] = DebankL2RegisterStorageLayout
	deployedBytecodes["DebankL2Register"] = DebankL2RegisterDeployedBin
}
